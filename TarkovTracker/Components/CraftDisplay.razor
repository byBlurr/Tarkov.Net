@using Tarkov.Entities;
<div class="alert alert-secondary mt-4" style="align-content:center; text-align:center; height: 300px;">
    <div id="craft-reward" style="display: flex; align-content:center; text-align:center;">
        <img src="@CraftItem.Item.Image512pxLink" style="width:5vw; height:5vw;" />
        <h5>@CraftItem.Quantity x @CraftItem.Item.Name</h5>
    </div>
    <div id="craft-requirements" display="flex" style="align-content:center;  text-align:center;" >
        @foreach (ContainedItem item in RequiredItems)
        {
            <div id="craft-requirement" title="@item.Quantity x @item.Item.Name" style="display: inline-block; align-content:center; text-align:center;">
                <img src="@item.Item.Image512pxLink" width="40vw" />
                <p style="text-align: center;"><b>@item.Quantity</b></p>
            </div>
        }
    </div>
    <div id="cost-info" style="align-content:center; text-align:center;">
            <p style="padding:0px; margin:0px;">Cost to craft: @TotalPrice (@EachPrice each)</p>
            <p style="padding:0px; margin:0px;">Time to craft: </p>

            @if (CraftItem.Item.Avg24hPrice != null)
            {
                @if (((int)CraftItem.Item.Avg24hPrice) != 0)
                {
                    <p style="padding:0px; margin:0px;">Average Sell Price: @SellPrice (@CraftItem.Item.Avg24hPrice each)</p>
                    <p style="padding:0px; margin:0px;">Profit: @Profit (@ProfitPerHour per hour)</p>
                }
                else
                {
                    <p style="padding:0px; margin:0px;">Unable to sell on Flea Market.</p>
                }
            }
            else
            {
                <p style="padding:0px; margin:0px;">Unable to sell on Flea Market.</p>
            }
    </div>
</div>

@code {
    [Parameter]
    public ContainedItem CraftItem { get; set; }

    [Parameter]
    public ContainedItem[] RequiredItems { get; set; }

    [Parameter]
    public int CraftTime { get; set; }

    private int TotalPrice = 0;
    private int EachPrice = 0;
    private int SellPrice = 0;
    private int Profit = 0;
    private float ProfitPerHour = 0;

    protected override async Task OnInitializedAsync()
    {
        TotalPrice = 0;
        foreach (var item in RequiredItems)
        {
            if (item.Item.Low24hPrice !!= null)
                TotalPrice += ((int)item.Quantity * (int)item.Item.Low24hPrice);
        }
        EachPrice = TotalPrice / (int)CraftItem.Quantity;

        if (CraftItem.Item.Avg24hPrice != null)
        {
            SellPrice = ((int)CraftItem.Quantity * (int)CraftItem.Item.Avg24hPrice);
            Profit = SellPrice - TotalPrice;
            ProfitPerHour = ((float)Profit / ((float) CraftTime / 60.0f));
        }

        
    }

}
